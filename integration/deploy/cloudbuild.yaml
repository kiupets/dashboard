steps:
  - name: 'gcr.io/$PROJECT_ID/dexma-cloud-builders/vaulter'
    id: GET_SECRETS_AND_CACHE
    entrypoint: /bin/sh
    args:
      - -c
      - |
        /vaulter.sh ENV=${_ENV} VALUE_KEY=jenkins_private_key VALUE_PATH=cloud_build VALUE_KEY=ansible_pass VALUE_PATH=cloud_build
        source build_vars
        echo "${jenkins_private_key}" > id_rsa
        chmod 400 id_rsa
        echo "${ansible_pass}" > .ansible_pass.txt

  - name: 'gcr.io/$PROJECT_ID/dexma-cloud-builders/versioner'
    id: GET_VERSION
    waitFor: ['-']
    entrypoint: /bin/sh
    args:
      - -c
      - |
        if [[ "${_BRANCH_OR_TAG}" != "release" ]]; then
          /versioner.sh -a=get -l=${_LANGUAGE} -b=${_BRANCH_TAG_NAME}
        else
          /versioner.sh -a=get -l=${_LANGUAGE} -r=true
        fi

  - name: 'gcr.io/$PROJECT_ID/dexma-cloud-builders/deployer'
    id: DEPLOY
    env:
      - 'ANSIBLE_VAULT_PASSWORD_FILE=.ansible_pass.txt'
      - 'ANSIBLE_HOST_KEY_CHECKING=False'
    entrypoint: /bin/sh
    args:
      - -c
      - |
        /usr/bin/ansible-playbook -i /deploy-ansible/inventory/${_ENV} --private-key id_rsa -u jenkins -e "app=${_APP} env=${_ENV} version=$(cat VERSION_NUMBER) branch_tag_name=${_BRANCH_TAG_NAME} worker_name=${_WORKER_NAME} host=external bb_project=external service=docker not_render=true" /deploy-ansible/deploy.yaml

substitutions:
  _ENV: 'pre'
  _APP: 'caixa-dashboards-front'
  _WORKER_NAME: 'caixa-dashboards-front'
  _BRANCH_TAG_NAME: 'master'
  _BRANCH_OR_TAG: 'release'
  _LANGUAGE: 'npm'